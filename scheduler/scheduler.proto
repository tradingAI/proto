syntax = "proto3";

package scheduler;

option go_package = "github.com/tradingAI/proto/gen/go/scheduler";

import "scheduler/runner.proto";
import "model/evaluate.proto";
import "model/inference.proto";
import "model/train.proto";

service Scheduler {
    // Tweb <-> Scheduler
    rpc DestoryRunner(DestoryRunnerRequest) returns (DestoryRunnerResponse);
    rpc CreateJob(CreateJobRequest) returns (CreateJobResponse);
    rpc StopJob(StopJobRequest) returns (StopJobResponse);

    // Runner <-> Scheduler
    rpc HeartBeat(HeartBeatRequest) returns (HeartBeatResponse);
}


message DestoryRunnerRequest {
    string runner_id = 1;
}

message DestoryRunnerResponse {
    bool ok = 1;
}

message CreateJobRequest {
    int64 job_id = 1;
    uint32 max_retry = 2;
    oneof input {
        evaluate.TbaseEvaluateInput eval_input = 3;
        inference.TbaseInferInput infer_input = 4;
        train.TbaseTrainInput train_input = 5;
    }
}

message CreateJobResponse {
    bool ok = 1;
}

message StopJobRequest {
    int64 job_id = 1;
}

message StopJobResponse {
    bool ok = 1;
}

message HeartBeatRequest {
    runner.Runner runner = 1;
}

message HeartBeatResponse {
    bool ok =1;
}
